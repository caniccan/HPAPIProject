// <auto-generated />
using System;
using HP.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HP.DataAccess.Migrations
{
    [DbContext(typeof(HPDbContext))]
    partial class HPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HP.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bright Side"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dark Side"
                        });
                });

            modelBuilder.Entity("HP.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EyeColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveNose")
                        .HasColumnType("bit");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<int?>("Mass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Wands")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthYear = 1999,
                            CharacterId = 1,
                            EyeColor = "Brown",
                            Gender = "Male",
                            HairColor = "Brown",
                            HaveNose = true,
                            Height = 193.0,
                            Mass = 90,
                            Name = "Can",
                            Pet = "Cat",
                            SkinColor = "White",
                            Surname = "İçcan",
                            Wands = "Dont Have"
                        },
                        new
                        {
                            Id = 2,
                            BirthYear = 1980,
                            CharacterId = 2,
                            EyeColor = "Bright green",
                            Gender = "Male",
                            HairColor = "Jet-black",
                            HaveNose = true,
                            Height = 180.0,
                            Mass = 67,
                            Name = "Harry James",
                            Pet = "Snowy owl",
                            SkinColor = "Light",
                            Surname = "Potter",
                            Wands = "Harry Potter's Wand, Blackthorn Wand, Draco Malfoy's Wand, Elder Wand"
                        });
                });

            modelBuilder.Entity("HP.Entities.Character", b =>
                {
                    b.HasOne("HP.Entities.Category", "Category")
                        .WithMany("Characters")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HP.Entities.Category", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
